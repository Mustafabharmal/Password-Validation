@model SpecialTask_2.Models.PasswordPolicy
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container">
            <br/>
            <h4>Password Policy</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                @Html.LabelFor(model => model.minLength, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.minLength, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.minLength, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.lowercase, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.lowercase, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lowercase, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.uppercase, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.uppercase, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.uppercase, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.numeric, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.numeric, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.numeric, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.special_char, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.special_char, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.special_char, "", new { @class = "text-danger" })
                </div>
            </div>
            <br/>
            <div class="form-group row">
                <div class="col-sm-offset-2 col-sm-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
    @*<div>
        @Html.ActionLink("Back to List", "Index")
        </div>*@
</body>
</html>